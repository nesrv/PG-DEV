#!/bin/bash

. ../lib

init

start_here

###############################################################################
h '1. Дополнительные атрибуты'

c 'Несколько примеров:'

ul 'Авторы: роль (автор, редактор, переводчик и т. п.);'
ul 'Книги: аннотация;'
ul 'Операции: текущий статус (оплачено, передано в службу доставки и т. п.).'

###############################################################################
h '2. Издательства'

c 'Надо добавить сущность «Издательство» с атрибутом «Название» (как минимум).'
c 'Книги связаны с издательствами отношением «многие ко многим»: книга может публиковаться в разных издательствах. Поэтому на физическом уровне потребуется промежуточная таблица «Публикации» с атрибутом «Год издания».'
c '(Разумеется, это упрощенная модель; при желании ее можно уточнять еще очень долго.)'

###############################################################################
h '3. Серии'

c 'Добавим сущность «Серия». К серии относится не сама книга, а ее конкретная публикация, так что имеет смысл вывести «Публикацию» на уровень ER-модели и связать ее с серий отношением «один ко многим» (каждая публикация принадлежит к одной серии, каждая серия может включать несколько публикаций).'
c 'Также серия связана отношением «один ко многим» с издательством (у издательства может быть несколько серий, а каждая серия принадлежит конкретному издательству).'
c 'Остается вопрос о внесерийных изданиях. Его можно решить либо введением фиктивной серии «Без серии», либо возможностью не указывать для публикации внешний ключ серии.'

###############################################################################
h '4. Компьютерные комплектующие'

c 'Рассматривая каждый конкретный тип комплектующих, можно без труда выделить необходимые атрибуты. Какие-то атрибуты будут общими (скажем, фирма-производитель и название модели), а какие-то будут иметь смысл только для данного конкретного типа. Например:'

ul 'Процессор: частота;'
ul 'Монитор: диагональ, разрешение;'
ul 'Жесткий диск: типоразмер, емкость.'

c 'Проблема в том, что рынок комплектующих очень динамичен. Некоторое время назад жесткие диски определялись частотой вращения и емкостью, а сейчас важен тип (твердотельный, вращающийся, гибридный). Для мониторов во времена ЭЛТ была важна частота обновления, а сейчас важен тип матрицы. Дисководы уже никому не нужны, зато появились флеш-накопители. И так далее.'
c 'Таким образом, либо придется постоянно изменять схему данных (а, значит, и постоянно изменять приложение, которое работает с этими данными!), либо искать более универсальную модель за счета отказа от жесткой структуры и контроля согласованности. Некоторые универсальные модели (например, хранение части данных в JSON) мы затрагивали в презентации.'

###############################################################################

stop_here
