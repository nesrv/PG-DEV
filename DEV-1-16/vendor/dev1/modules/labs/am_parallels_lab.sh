#!/bin/bash

. ../lib
init

start_here

###############################################################################
h '1. План запроса с настройками по умолчанию'

s 1 "EXPLAIN (costs off)
SELECT count(book_ref) FROM bookings;"

c 'Параллельное последовательное сканирование оказывается наиболее выгодным.'

###############################################################################
h '2. Запрет последовательного сканирования'

c 'Отключим Seq Scan и повторим запрос:'

s 1 "SET enable_seqscan = off;"

s 1 "EXPLAIN (costs off)
SELECT count(book_ref) FROM bookings;"

c 'Индексный доступ медленнее табличного, но в данном случае достаточно просканировать только индекс.'

###############################################################################
h '3. Запрет сканирования только индекса'

c 'Отключим и Index Only Scan:'

s 1 "SET enable_indexonlyscan = off;"

s 1 "EXPLAIN (costs off)
SELECT count(book_ref) FROM bookings;"

c 'Остальные параллельные способы получения данных оказываются невыгодными, лучше вообще не использовать параллельность.'

###############################################################################

h '4. Запрет параллельности'

c 'Сбросим все параметры и запретим параллельные планы:'

s 1 "RESET ALL;"

s 1 "SET max_parallel_workers_per_gather = 0;"

s 1 "EXPLAIN (costs off)
SELECT count(book_ref) FROM bookings;"

c 'Планировщик выбрал последовательное сканирование как самый выгодный способ получить все строки.'

c 'Меняя значения конфигурационных параметров, можно исследовать поведение оптимизатора: например, понять, какие альтернативные планы он рассматривал.'

s 1 "RESET ALL;"

stop_here
cleanup
demo_end
