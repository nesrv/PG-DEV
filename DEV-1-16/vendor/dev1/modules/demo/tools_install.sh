#!/bin/bash

. ../lib
init
psql_open A 1
start_here 6

###############################################################################
h 'Распаковка архива'

c 'Архив с исходными кодами находится в домашнем каталоге пользователя student. Распаковываем архив:'
e "cd"
e "tar xzf /home/student/postgresql-${SOURCE_VER}.tar.gz"
e "ls -l /home/student/postgresql-${SOURCE_VER}"
p

###############################################################################
h 'Создание конфигурации'

c 'Настройку сборки выполним в каталоге с распакованным исходным кодом, используя скрипт configure.'
eu_fake_p student "cd /home/student/postgresql-${SOURCE_VER}"

c 'Внимание! Если сборка производится повторно, например с другими параметрами конфигурации, то предварительно нужно убрать файлы, оставшиеся от предыдущей сборки:'
eu_fake_p student "make distclean"

c 'В команде configure можно указать различные параметры конфигурации. Например:'
ul '--prefix — каталог установки, по умолчанию /usr/local/pgsql;'
ul '--enable-debug — для включения отладочной информации.'
c 'Полный список параметров есть в документации.'
c 'Также принимаются во внимание переменные окружения. Например, CC и CFLAGS настраивают компилятор C.'


c 'Скрипт configure по умолчанию подготавливает сборку и установку исполняемых файлов, библиотек и прочих файлов PostgreSQL в каталог /usr/local/pgsql. Обычно каталог установки доступен для записи только суперпользователю ОС.'
c "В целях демонстрации ключом --prefix укажем каталог установки ПО сервера в подкаталог pgsql${VERSION_A} домашнего каталога пользователя student. Кроме того, будем использовать порт 5555 вместо порта 5432 по умолчанию:"
eu_fake_p student "./configure --prefix=/home/student/pgsql${VERSION_A} --with-pgport=5555"

c 'Вывод этой и следующих команд занимает очень много места, мы не будем его показывать.'
p

###############################################################################
h 'Сборка и установка PostgreSQL'

c 'Возможные варианты:'
ul 'make — сборка только сервера;'
ul 'make world — сборка сервера, всех расширений и документации.'

c 'Собираем сервер. В зависимости от характеристик компьютера команда make может работать достаточно долго (минуты и даже десятки минут).'
eu_fake_p student "make"

c 'Теперь устанавливаем сервер.'
eu_fake_p student "make install"

c 'Для сборки расширений нужно повторить make и make install в подкаталоге contrib.'

eu_fake_p student "cd contrib"
eu_fake_p student "make"
eu_fake_p student "make install"

c 'Если бы мы собирали сервер с расширениями и документацией (make world), то можно было бы установить все вместе командой make install-world.'

P 8

###############################################################################
h 'Создание кластера'

c "Теперь необходимо создать каталог для данных. Для промышленного использования владельцем каталога обычно назначают отдельного пользователя ОС. В нашем случае, пусть это будет каталог пользователя student внутри /home/student/pgsql$VERSION_A"

eu_fake_p student "mkdir /home/student/pgsql$VERSION_A/data"

c 'Этот каталог часто называют PGDATA по имени переменной окружения, которую удобно использовать при работе с утилитами сервера.'
eu_fake_p student "export PGDATA=/home/student/pgsql$VERSION_A/data"

c 'Все утилиты сервера установлены в подкаталоге bin, который стоит добавить в переменную PATH:'
eu_fake_p student "export PATH=/home/student/pgsql$VERSION_A/bin:\$PATH"

c 'Для инициализации кластера баз данных используется утилита initdb.'

ul 'В ключе -U можно указать имя суперпользователя СУБД. Если его не задать, то используется имя пользователя ОС, в нашем случае student. Обычно таким пользователем является postgres, так что зададим это имя явно.'
ul 'Ключ -k включает подсчет контрольных сумм страниц, что позволяет своевременно обнаруживать повреждения данных.'
ul 'Если переменная PGDATA не установлена, то в ключе -D следует указать каталог для данных. В нашем случае этот ключ можно было бы не указывать.'

eu_fake_p student "initdb -U postgres -k -D /home/student/pgsql$VERSION_A/data"

P 10

###############################################################################
h 'Управление сервером'

c 'Теперь все готово к запуску сервера.'
ul 'В ключе -l укажем файл журнала сообщений сервера.'
ul 'Ключ -D опускаем, поскольку задана переменная PGDATA.'

eu_fake_p student "pg_ctl start -l /home/student/logfile"

c 'Для проверки работы можно вызвать утилиту psql, которая подключится к серверу и вернет текущее время:'
eu_fake_p student "psql -U postgres -p 5555 -c 'SELECT now();'"
r_only 1 "SELECT now();"
p

c 'Для останова сервера используется следующая команда:'
eu_fake_p student 'pg_ctl stop'

P 13

###############################################################################
h 'Создание кластера в Ubuntu'

c 'В виртуальной машине курса PostgreSQL установлен из пакета командой:'
eu_fake_p student "sudo apt install -y postgresql-$VERSION_A"

c 'Каталог установки PostgreSQL:'
e "sudo ls -l /usr/lib/postgresql/$VERSION_A"

c 'Владелец ПО сервера — пользователь root.'
p

c 'Утилита pg_config показывает, с какими параметрами был собран сервер:'
e "sudo /usr/lib/postgresql/$VERSION_A/bin/pg_config --configure"

c "Кластер баз данных с именем main уже инициализирован и находится в каталоге /var/lib/postgresql/$VERSION_A/main."

c 'Владельцем каталога является пользователь postgres. Вот содержимое каталога:'
e "sudo ls -l /var/lib/postgresql/$VERSION_A/main"

P 15

###############################################################################
h 'Управление сервером в Ubuntu'

c "При установке из пакета в настройки запуска ОС добавляется запуск PostgreSQL. Поэтому после загрузки операционной системы отдельно стартовать PostgreSQL не нужно."

c "Можно явным образом управлять сервером с помощью утилиты pg_ctlcluster, которая запускается либо от имени пользователя ОС postgres, либо через sudo."
c "Утилита pg_ctlcluster позволяет управлять несколькими серверами разных версий. В качестве параметров ей передаются:"
ul "$VERSION_A — номер версии сервера;"
ul "main — название сервера;"
ul "команда"

c "Остановить сервер:"
e "sudo pg_ctlcluster $VERSION_A main stop"
e "pg_lsclusters 16 main"

c "Запустить сервер:"
e "sudo pg_ctlcluster $VERSION_A main start"

c "Перезапустить:"
e "sudo pg_ctlcluster $VERSION_A main restart"

c 'Получить текущий статус сервера:'
e "sudo pg_ctlcluster $VERSION_A main status"

c "Перечитать файлы конфигурации:"
e "sudo pg_ctlcluster $VERSION_A main reload"

p

c 'Журнал сообщений сервера при пакетной установке находится здесь:'

e "ls -l /var/log/postgresql/postgresql-$VERSION_A-main.log"

c 'Заглянем в конец журнала:'

e "tail -n 10 /var/log/postgresql/postgresql-$VERSION_A-main.log"

###############################################################################
stop_here
cleanup
demo_end
